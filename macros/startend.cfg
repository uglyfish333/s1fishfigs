[gcode_macro START_PRINT] 
gcode:

 #Absolute coordinates, extruder relative
 G90
 M83

 #Get Bed and Extruder temperature from Slicer GCode
 {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
 {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}

 RESPOND PREFIX=START_PRINT: MSG="loaded information from gcode file, let's heat things up and head home!"

 #Starting bed and nozzle heating, homing, then waiting to finish heating
 M140 S{BED_TEMP}
 M104 S{EXTRUDER_TEMP} T0
 G28
 M190 S{BED_TEMP}
 M109 S{EXTRUDER_TEMP} T0

 RESPOND PREFIX=START_PRINT: MSG="now that we're done heating we'll start an adaptive mesh!"
 BED_MESH_CALIBRATE

 RESPOND PREFIX=START_PRINT: MSG="making sure the juices are flowing..."

 LINE_PURGE

 RESPOND PREFIX=START_PRINT: MSG="on to the main event!"

[gcode_macro END_PRINT]
description: "G-code to run at the end of a print. Replace your slicer's end G-code with this"
gcode:
  M104 S0 ;Turn-off hotend
  M106 S0 ;Turn-off fan
  M140 S0 ;Turn-off bed

  SAFE_RETRACT
  SAFE_PARK

  M84 X Y E ;Disable all steppers but Z

 RESPOND PREFIX=END_PRINT: MSG="All done!"

[gcode_macro SAFE_RETRACT]
description: Retract
gcode:
  SAVE_GCODE_STATE NAME=safe_retract

  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83 ;Relative extrusion
    G91 ;Relative positioning

    G1 Z0.2 F2400 ;Raise Z
    G1 E-2 F300 ;Retract filament 2mm to prevent oozing
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}

  RESTORE_GCODE_STATE NAME=safe_retract

[gcode_macro SAFE_PARK]
description:
  "Park the print head in a safe location
  @param {float} [X=200] - The target hotend temp
  @param {float} [Y=200] - The target hotend temp
  @param {bool} [Z_MOVE=true] - Whether or not to move the Z axis. This can be useful if you've already moved on Z"
gcode:
  SAVE_GCODE_STATE NAME=safe_park

  ##### set park positon for x and y #####
  # default is your max position from your printer.cfg
  {% set x_park = params.X|default(printer.toolhead.axis_minimum.x + 5.0)|float %}
  {% set y_park = params.Y|default(printer.toolhead.axis_maximum.y - 5.0)|float %}
  {% set should_park_z = params.Z_MOVE|default('true')|string %}
  ##### calculate safe lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set current_z = printer.toolhead.position.z|float %}
  {% set jump_z = 20.0|float %}
  {% if (current_z + jump_z) < max_z %}
    {% set z_safe = (current_z + jump_z) %}
  {% else %}
    {% set z_safe = max_z %}
  {% endif %}
  ##### end of definitions #####

  {% if "xyz" in printer.toolhead.homed_axes %}
    G90 ;Use absolute coordinates
    {% if should_park_z|lower == 'true' %}
      G1 Z{z_safe} F900
    {% endif %}
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

  RESTORE_GCODE_STATE NAME=safe_park
